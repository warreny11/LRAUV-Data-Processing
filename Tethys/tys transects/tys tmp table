fid = fopen('measured_parameter-6.3tethys.csv');
for i = 1:1000000

tline = fgetl(fid);

i_61 = find(tline==',',9);
i_62 = find(tline==')',1);
i_63 = find(tline=='(',1);
tystmpid = tline( 1 : i_61-1);
tystmpidnum(i) = str2double(tystmpid);
i_64 = 10;

if tystmpidnum(i) == i_64;

tystmplonstr = tline(i_63+1 : i_63+21);
tystmplonbig(i) = str2num(tystmplonstr);


end
end

tystmplon = nonzeros(tystmplonbig([1,diff(tystmplonbig)]~=0));%gets rid of zeros which appear as the matlab skips over 


tystmpmax = findpeaks(tystmplon);
tystmpmin = -findpeaks(-tystmplon);


[pks,locs] = findpeaks(tystmplon);
tystmpmax = pks;
tystmploc = locs;
[pks,locs] = -findpeaks(-tystmplon);
tystmpmin = pks;
tystmploc = locs;



%gives indices of peaks
nums = numel(locs);%finds number of peaks
n = 1;
while n<=nums %while n is less than number of peaks, searches for max in the range of 1:loc
for i = locs(n):locs(n+1)
tystmpmax(n) = max(tystmplon(locs(n):locs(n+1)));
tystmpmin(n) = max(-tystmplon(locs(n):locs(n+1)));
n = n+1;
end
end



invtystmplon = -1*tystmplon;
tystmpmin = findpeaks(invtystmplon) %these two functions will find all peaks or local maximums(to find local min, multiply function by -1)

%so I want to get all of the longitudes then I can impose some requirements and get it to show me endpoints

disp(tystmplonbig) %shows all lines with id of 10
