fid = fopen('measured_parameter-6.3tethys.csv');
for i = 1:1000000

tline = fgetl(fid);

i_61 = find(tline==',',9);
i_62 = find(tline==')',1);
i_63 = find(tline=='(',1);
tystmpid = tline( 1 : i_61-1);
tystmpidnum(i) = str2double(tystmpid);
i_64 = 10;

if tystmpidnum(i) == i_64;

tystmplonstr = tline(i_63+1 : i_63+21);
tystmplonbig(i) = str2num(tystmplonstr);

end
end

tystmplon = nonzeros(tystmplonbig([1,diff(tystmplonbig)]~=0));%gets rid of zeros which appear as the matlab skips over 

[pks,locs] = findpeaks(tystmplon); %gets the peaks and indices : bottom part gets the valleys and indices
tystmpmax = pks;
tystmpmaxloc = locs;
[pks,locs] = findpeaks(-tystmplon);
tystmpmin = -pks;
tystmpminloc = locs;


%the good thing about this is now I have endpoints of pks and valleys: if I can match them then I can use them as endpoints for table.

disp(tystmplonbig) %shows all lines with id of 10
